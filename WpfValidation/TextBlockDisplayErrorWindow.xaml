<Window x:Class="WpfValidation.TextBlockDisplayErrorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfValidation"
        xmlns:converters="clr-namespace:RanOpt.iBuilding.Common.WpfControls.Converters"
        xmlns:validation="https://github.com/JohanLarsson/Gu.Wpf.ValidationScope"
        xmlns:bindings="clr-namespace:WpfValidation.Bindings"
        mc:Ignorable="d"
        Title="在输入框下方用红色TextBlock显示错误/ Display error message by TextBlock under the input TextBox"
        Height="450"
        Width="800">
    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Theme/FormEditStyle.xaml" />
                <ResourceDictionary>
                    <GridLength x:Key="LabelWidth">200</GridLength>
                    <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <local:UserViewModel />
    </Window.DataContext>

    <StackPanel Margin="0,20,0,0"
                x:Name="MainPanel"
                validation:Scope.ForInputTypes="TextBox">
        <StackPanel.Resources>
            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <ControlTemplate.Resources>
                                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            </ControlTemplate.Resources>
                            <Border BorderThickness="0"
                                    BorderBrush="#569CE4"
                                    Visibility="{Binding ElementName=Placeholder, Mode=OneWay, Path=AdornedElement.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <AdornedElementPlaceholder x:Name="Placeholder" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Grid">
                <Setter Property="Margin" Value="0,5" />
            </Style>
        </StackPanel.Resources>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource LabelWidth}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Grid.Row="0" Text="Name" />
            <TextBox Grid.Column="1" Grid.Row="0"
                     x:Name="TxtName"
                     Text="{bindings:ValidationBinding Path=Name}" />
            <TextBlock Grid.Column="1" Grid.Row="1"
                       Style="{StaticResource ErrorMessageTextBlock}"
                       Text="{Binding ElementName=TxtName, Path=(Validation.Errors)[0].ErrorContent}" />
        </Grid>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource LabelWidth}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Grid.Row="0" Text="Age" />
            <TextBox Grid.Column="1" Grid.Row="0"
                     x:Name="TxtAge"
                     Text="{bindings:FormatBinding Path=Age,TypeCode=Int32}" />
            <TextBlock Grid.Column="1" Grid.Row="1"
                       Style="{StaticResource ErrorMessageTextBlock}"
                       Text="{Binding ElementName=TxtAge, Path=(Validation.Errors)[0].ErrorContent}" />
        </Grid>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource LabelWidth}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Grid.Row="0" Text="Height" />
            <TextBox Grid.Column="1" Grid.Row="0"
                     x:Name="TxtHeight"
                     Text="{bindings:FormatBinding Path=Height,TypeCode=Single}" />
            <TextBlock Grid.Column="1" Grid.Row="1"
                       Style="{StaticResource ErrorMessageTextBlock}"
                       Text="{Binding ElementName=TxtHeight, Path=(Validation.Errors)[0].ErrorContent}" />
        </Grid>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource LabelWidth}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="1" Grid.Row="0"
                    Content="OK"
                    IsEnabled="{Binding Path=(validation:Scope.HasError), Converter={StaticResource InverseBooleanConverter},  ElementName=MainPanel}"
                    Command="{Binding OkCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{ StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" Value="Bisque" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <GroupBox>
            <GroupBox.Header>
                <TextBlock Text="Validation result" FontWeight="Black">
                    <TextBlock.Foreground>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset="0.0" Color="PaleVioletRed" />
                            <GradientStop Offset="0.25" Color="IndianRed" />
                            <GradientStop Offset="0.5" Color="MediumVioletRed" />
                            <GradientStop Offset="0.75" Color="Red" />
                            <GradientStop Offset="1" Color="DarkRed" />
                        </LinearGradientBrush>
                    </TextBlock.Foreground>
                </TextBlock>
            </GroupBox.Header>

            <ItemsControl BorderThickness="2" BorderBrush="Red"
                          ItemsSource="{Binding Path=(validation:Scope.Errors),ElementName=MainPanel}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type ValidationError}">
                        <TextBlock Foreground="Red"
                                   Text="{Binding ErrorContent}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </GroupBox>
    </StackPanel>
</Window>